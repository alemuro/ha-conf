- platform: yr
- platform: mqtt
  name: Exterior Temperature MQTT
  state_topic: "ble/exterior/temperature"
  unit_of_measurement: "°C"
- platform: mqtt
  name: Exterior Humidity MQTT
  state_topic: "ble/exterior/humidity"
  unit_of_measurement: "%"
- platform: mqtt
  name: Dormitori Temperature MQTT
  state_topic: "ble/dormitori/temperature"
  unit_of_measurement: "°C"
- platform: mqtt
  name: Dormitori Humidity MQTT
  state_topic: "ble/dormitori/humidity"
  unit_of_measurement: "%"
- platform: mqtt
  name: Menjador Temperature MQTT
  state_topic: "ble/menjador/temperature"
  unit_of_measurement: "°C"
- platform: mqtt
  name: Menjador Humidity MQTT
  state_topic: "ble/menjador/humidity"
  unit_of_measurement: "%"
# - platform: mitemp_bt
#   mac: !secret mac_temp_mi_dormitori
#   monitored_conditions:
#     - temperature
#     - humidity
#   scan_interval: 120
#   retries: 1
#   timeout: 10
#   median: 1
#   name: Dormitori
# - platform: mitemp_bt
#   mac: !secret mac_temp_mi_menjador
#   monitored_conditions:
#     - temperature
#     - humidity
#   scan_interval: 120
#   retries: 1
#   timeout: 10
#   median: 1
#   name: Menjador
# - platform: beewi_smartclim
#   mac: !secret mac_temp_beewi_exterior
#   name: Exterior
#   scan_interval: 60
# - platform: github
#   access_token: !secret github_access_token
#   repositories:
#     - path: "alemuro/ha-conf"
- platform: waqi
  token: !secret waqi_api_key
  locations:
    - barcelona
- platform: google_travel_time
  name: "Home to Work car"
  scan_interval: 3600
  api_key: !secret google_api_key
  origin: !secret home_address
  destination: !secret work_address
  options:
    mode: driving
- platform: google_travel_time
  name: "Home to Work bus"
  scan_interval: 3600
  api_key: !secret google_api_key
  origin: !secret home_address
  destination: !secret work_address
  options:
    mode: transit
    transit_mode: bus
- platform: google_travel_time
  name: "Work to home car"
  scan_interval: 3600
  api_key: !secret google_api_key
  destination: !secret home_address
  origin: !secret work_address
  options:
    mode: driving
- platform: google_travel_time
  name: "Work to home bus"
  scan_interval: 3600
  api_key: !secret google_api_key
  destination: !secret home_address
  origin: !secret work_address
  options:
    mode: transit
    transit_mode: bus
- platform: history_stats
  name: Time at home
  entity_id: device_tracker.aleix_mobil
  state: "home"
  type: time
  start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  end: "{{ now() }}"
- platform: history_stats
  name: Time at work
  entity_id: device_tracker.aleix_mobil
  state: "Feina"
  type: time
  start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  end: "{{ now() }}"
- platform: history_stats
  name: Time other
  entity_id: device_tracker.aleix_mobil
  state: "fora"
  type: time
  start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
  end: "{{ now() }}"
- platform: time_date 
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'
- platform: tmb
  app_id: !secret tmb_app_id
  app_key: !secret tmb_app_key
  stops:
    - line: V21
      stop: 366
      name: Casa
    - line: H6
      stop: 940
      name: Feina
- platform: citybikes
  name: Horta
  latitude: !secret latitude
  longitude: !secret longitude
  radius: 1000
- platform: citybikes
  name: Feina
  latitude: !secret latitude_feina
  longitude: !secret longitude_feina
  radius: 500
- platform: template
  sensors:
    solar_angle:
      friendly_name: "Sun Angle"
      unit_of_measurement: '°'
      value_template: "{{ '%+.1f'|format(state_attr('sun.sun', 'elevation')) }}"


###############
#  Templates  #
###############
- platform: template
  sensors:
    mesa_percent:
      friendly_name: Taula %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.mesa', 'on') %}
        {{ (state_attr('light.mesa', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    mesita_percent:
      friendly_name: Tauleta %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.mesita', 'on') %}
        {{ (state_attr('light.mesita', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    sofa_percent:
      friendly_name: Sofà %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.sofa', 'on') %}
        {{ (state_attr('light.sofa', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    entrada_percent:
      friendly_name: Entrada %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.entrada', 'on') %}
        {{ (state_attr('light.entrada', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    cuina_temps_restant_percent:
      friendly_name: Cuina temps restant %
      unit_of_measurement: '%'
      value_template: |
        {% if is_state('automation.cuina_quan_no_hi_hagi_moviment_activar_timer', 'on') %}
        {% set v = (100 - (as_timestamp(now()) - as_timestamp(state_attr('automation.cuina_quan_no_hi_hagi_moviment_activar_timer', 'last_triggered'))) 
          / (600/100)) | round(0, 'ceil') %}
        {{ [([v, 0] | max), 100] | min}}
        {% else %}
        100
        {% endif %}
    entrada_temps_restant_percent:
      friendly_name: Entrada temps restant %
      unit_of_measurement: '%'
      value_template: |
        {% if is_state('automation.entrada_quan_no_hi_hagi_moviment_activar_timer', 'on') %}
        {% set v = (100 - (as_timestamp(now()) - as_timestamp(state_attr('automation.entrada_quan_no_hi_hagi_moviment_activar_timer', 'last_triggered'))) 
          / (300/100)) | round(0, 'ceil') %}
        {{ [([v, 0] | max), 100] | min}}
        {% else %}
        100
        {% endif %}

###############
# SQL Queries #
###############

- platform: sql
  db_url: !secret db_mysql_url
  queries:
    - name: Exterior Temperature MQTT (MAX)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.exterior_temperature_mqtt';"
      column: 'state'
    - name: Exterior Temperature MQTT (MIN)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.exterior_temperature_mqtt' AND state <> 0;"
      column: 'state'
    - name: Exterior Temperature MQTT (Diff 24h)
      unit_of_measurement: ºC
      query: |
        SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
            (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
              FROM states yesterday 
              WHERE yesterday.entity_id = 'sensor.exterior_temperature_mqtt' AND state <> 0
              AND yesterday.created < NOW() - INTERVAL 1 DAY 
              ORDER BY yesterday.created DESC LIMIT 1
            )
        ) AS state
        FROM states now 
        WHERE now.entity_id = 'sensor.exterior_temperature_mqtt' AND state <> 0
        ORDER BY now.created DESC LIMIT 1;
      column: 'state'
    - name: Dormitori Temperature MQTT (MAX)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.dormitori_temperature_mqtt';"
      column: 'state'
    - name: Dormitori Temperature MQTT (MIN)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.dormitori_temperature_mqtt' AND state <> 0;"
      column: 'state'
    - name: Dormitori Temperature MQTT (Diff 24h)
      unit_of_measurement: ºC
      query: |
        SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
            (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
              FROM states yesterday 
              WHERE yesterday.entity_id = 'sensor.dormitori_temperature_mqtt' AND state <> 0
              AND yesterday.created < NOW() - INTERVAL 1 DAY 
              ORDER BY yesterday.created DESC LIMIT 1
            )
        ) AS state
        FROM states now  
        WHERE now.entity_id = 'sensor.dormitori_temperature_mqtt' AND state <> 0
        ORDER BY now.created DESC LIMIT 1;
      column: 'state'
    - name: Menjador Temperature MQTT (MAX)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.menjador_temperature_mqtt';"
      column: 'state'
    - name: Menjador Temperature MQTT (MIN)
      unit_of_measurement: ºC
      query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.menjador_temperature_mqtt' AND state <> 0;"
      column: 'state'
    - name: Menjador Temperature MQTT (Diff 24h)
      unit_of_measurement: ºC
      query: |
        SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
            (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
              FROM states yesterday 
              WHERE yesterday.entity_id = 'sensor.menjador_temperature_mqtt' AND state <> 0
              AND yesterday.created < NOW() - INTERVAL 1 DAY 
              ORDER BY yesterday.created DESC LIMIT 1
            )
        ) AS state
        FROM states now 
        WHERE now.entity_id = 'sensor.menjador_temperature_mqtt' AND state <> 0
        ORDER BY now.created DESC LIMIT 1;
      column: 'state'